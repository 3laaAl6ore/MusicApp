{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Style from \"../Utilities/AppStyle\";\nimport Colors from \"../Utilities/AppColors\";\nimport { Video, AVPlaybackStatus } from 'expo-av';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TrackDetails = function TrackDetails(props) {\n  var video = useRef(null);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var trackData = props.route.params.track;\n\n  var actionOk = function actionOk() {\n    var myData;\n    return _regeneratorRuntime.async(function actionOk$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              console.log(\"f***\");\n              myData = AsyncStorage.getItem('PlayList');\n\n              if (myData != null) {\n                console.log(myData);\n              } else {\n                console.log(\"data not exist\");\n              }\n            } catch (err) {\n              console.log(err);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: Style.container,\n    children: [_jsx(Video, {\n      ref: video,\n      style: Style.video,\n      source: {\n        uri: trackData.previewUrl\n      },\n      useNativeControls: true,\n      resizeMode: \"contain\",\n      isLooping: true,\n      onPlaybackStatusUpdate: function onPlaybackStatusUpdate(status) {\n        return setStatus(function () {\n          return status;\n        });\n      }\n    }), _jsxs(View, {\n      style: {\n        padding: 20,\n        backgroundColor: Colors.gray_text\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontFamily: 'Poppins-SemiBold',\n          color: Colors.white,\n          fontSize: 22\n        },\n        children: trackData.artistName\n      }), _jsx(Text, {\n        style: {\n          fontFamily: 'Poppins-Light',\n          color: Colors.white,\n          fontSize: 17\n        },\n        children: trackData.trackName\n      })]\n    }), _jsx(View, {\n      style: {\n        padding: 20,\n        backgroundColor: Colors.white,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: actionOk,\n        style: {\n          width: 70,\n          height: 70,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.orange,\n          borderRadius: 50\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"favorite-border\",\n          color: Colors.white,\n          size: 50\n        })\n      })\n    })]\n  });\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: navData.route.params.track.trackName\n  };\n};\nexport default TrackDetails;","map":{"version":3,"sources":["C:/Users/a/Desktop/MyApps/redux/redux/Components/TrackDetails.js"],"names":["React","useState","useRef","Style","Colors","Video","AVPlaybackStatus","MaterialIcons","AsyncStorage","TrackDetails","props","video","status","setStatus","trackData","route","params","track","actionOk","console","log","myData","getItem","err","container","uri","previewUrl","padding","backgroundColor","gray_text","fontFamily","color","white","fontSize","artistName","trackName","alignItems","justifyContent","width","height","orange","borderRadius","screenOptions","navData","headerTitle"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\nimport { Text, View, TouchableOpacity, Alert } from 'react-native';\nimport Style from '../Utilities/AppStyle';\nimport Colors from '../Utilities/AppColors';\nimport { Video, AVPlaybackStatus } from 'expo-av';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst TrackDetails = props => {\n\n    const video = useRef(null);\n    const [status, setStatus] = useState({});\n    const trackData = props.route.params.track;\n\n    const actionOk =async () => {\n       try{\n           console.log(\"f***\");\n        const myData =  AsyncStorage.getItem('PlayList');\n        if(myData != null){\n            console.log(myData);\n        }else{\n            console.log(\"data not exist\");\n        }\n    }catch(err){\n            console.log(err);\n        }\n    }\n\n \n\n    return (\n        <View style={Style.container}>\n\n            <Video\n                ref={video}\n                style={Style.video}\n                source={{uri: trackData.previewUrl}}\n                useNativeControls\n                resizeMode=\"contain\"\n                isLooping\n                onPlaybackStatusUpdate={status => setStatus(() => status)}\n            />\n\n            <View style={{padding:20, backgroundColor:Colors.gray_text}}>\n                <Text style={{fontFamily:'Poppins-SemiBold', color:Colors.white, fontSize:22}}>{trackData.artistName}</Text>\n                <Text style={{fontFamily:'Poppins-Light', color:Colors.white, fontSize:17}}>{trackData.trackName}</Text>\n            </View>\n\n            <View style={{padding:20, backgroundColor:Colors.white, alignItems:'center', justifyContent:'center'}}>\n                <TouchableOpacity onPress={actionOk} style={{width:70,height:70, alignItems:'center', justifyContent:'center', backgroundColor:Colors.orange, borderRadius:50}}>\n                    <MaterialIcons name='favorite-border' color={Colors.white} size={50} />\n                </TouchableOpacity>\n            </View>\n\n\n        </View>\n    )\n}\nexport const screenOptions = navData => {\n    return {\n        headerTitle: navData.route.params.track.trackName\n    }\n}\nexport default TrackDetails;"]},"metadata":{},"sourceType":"module"}