{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var GET_TRACK_BY_ARTIST = 'GET_TRACK_BY_ARTIST';\nexport var GET_VIDEOS_BY_ARTIST = 'GET_TRACK_BY_ARTIST';\nvar baseUrl = 'https://itunes.apple.com/search';\nexport var getTracksByArtistDispatch = function getTracksByArtistDispatch(data) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_TRACK_BY_ARTIST,\n      data: data\n    });\n  };\n};\nexport var getTracksByArtist = function getTracksByArtist(artist) {\n  return function _callee(dispatch) {\n    var response, data, message;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + \"?term=\" + artist, {\n              method: 'GET'\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n\n            if (!data) {\n              _context.next = 10;\n              break;\n            }\n\n            dispatch(getTracksByArtistDispatch(data));\n            _context.next = 12;\n            break;\n\n          case 10:\n            message = 'Something is wrong with the data . ';\n            throw new Error(message);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getVideosByArtistDispatch = function getVideosByArtistDispatch(data) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_VIDEOS_BY_ARTIST,\n      data: data\n    });\n  };\n};\nexport var getVideosByArtist = function getVideosByArtist(artist) {\n  return function _callee2(dispatch) {\n    var response, data, message;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + \"?term=\" + artist + \"&entity=musicVideo\", {\n              method: 'GET'\n            }));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context2.sent;\n\n            if (!data) {\n              _context2.next = 10;\n              break;\n            }\n\n            dispatch(getVideosByArtistDispatch(data));\n            _context2.next = 12;\n            break;\n\n          case 10:\n            message = 'Something is wrong with the data . ';\n            throw new Error(message);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/הנדסת תוכנה/שנה ב/React Native/23.12.2021/reduxAPP/store/actions.js"],"names":["GET_TRACK_BY_ARTIST","GET_VIDEOS_BY_ARTIST","baseUrl","getTracksByArtistDispatch","data","dispatch","type","getTracksByArtist","artist","fetch","method","response","json","message","Error","getVideosByArtistDispatch","getVideosByArtist"],"mappings":";AAAA,OAAO,IAAMA,mBAAmB,GAAE,qBAA3B;AACP,OAAO,IAAMC,oBAAoB,GAAE,qBAA5B;AAEP,IAAMC,OAAO,GAAG,iCAAhB;AAEA,OAAO,IAAMC,yBAAyB,GAAC,SAA1BA,yBAA0B,CAACC,IAAD,EAAQ;AAC3C,SAAO,UAAAC,QAAQ,EAAG;AACdA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,mBAAN;AAA0BI,MAAAA,IAAI,EAAJA;AAA1B,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAU;AAEvC,SAAO,iBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACkBI,KAAK,CAAIP,OAAJ,cAAoBM,MAApB,EAA6B;AACnDE,cAAAA,MAAM,EAAE;AAD2C,aAA7B,CADvB;;AAAA;AACGC,YAAAA,QADH;AAAA;AAAA,6CAIeA,QAAQ,CAACC,IAAT,EAJf;;AAAA;AAIGR,YAAAA,IAJH;;AAAA,iBAKAA,IALA;AAAA;AAAA;AAAA;;AAMCC,YAAAA,QAAQ,CAACF,yBAAyB,CAACC,IAAD,CAA1B,CAAR;AAND;AAAA;;AAAA;AASKS,YAAAA,OATL,GASc,qCATd;AAAA,kBAUO,IAAIC,KAAJ,CAAUD,OAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAcH,CAhBM;AAmBP,OAAO,IAAME,yBAAyB,GAAC,SAA1BA,yBAA0B,CAACX,IAAD,EAAQ;AAC3C,SAAO,UAAAC,QAAQ,EAAG;AACdA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,oBAAN;AAA2BG,MAAAA,IAAI,EAAJA;AAA3B,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,IAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,MAAD,EAAU;AAEvC,SAAO,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACkBI,KAAK,CAAIP,OAAJ,cAAoBM,MAApB,yBAA+C;AACrEE,cAAAA,MAAM,EAAE;AAD6D,aAA/C,CADvB;;AAAA;AACGC,YAAAA,QADH;AAAA;AAAA,6CAIeA,QAAQ,CAACC,IAAT,EAJf;;AAAA;AAIGR,YAAAA,IAJH;;AAAA,iBAKAA,IALA;AAAA;AAAA;AAAA;;AAMCC,YAAAA,QAAQ,CAACU,yBAAyB,CAACX,IAAD,CAA1B,CAAR;AAND;AAAA;;AAAA;AASKS,YAAAA,OATL,GASc,qCATd;AAAA,kBAUO,IAAIC,KAAJ,CAAUD,OAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAcH,CAhBM","sourcesContent":["export const GET_TRACK_BY_ARTIST= 'GET_TRACK_BY_ARTIST';\r\nexport const GET_VIDEOS_BY_ARTIST= 'GET_TRACK_BY_ARTIST';\r\n\r\nconst baseUrl = 'https://itunes.apple.com/search';\r\n\r\nexport const getTracksByArtistDispatch=(data)=>{\r\n    return dispatch =>{\r\n        dispatch({type:GET_TRACK_BY_ARTIST,data});\r\n    }\r\n}\r\n\r\nexport const getTracksByArtist = (artist)=>{\r\n\r\n    return async dispatch=>{\r\n        const response=await fetch(`${baseUrl}?term=${artist}`,{\r\n            method: 'GET',\r\n        });\r\n        const data= await response.json();\r\n        if(data){\r\n            dispatch(getTracksByArtistDispatch(data));\r\n        }\r\n        else{\r\n            let message= 'Something is wrong with the data . '\r\n            throw new Error(message);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getVideosByArtistDispatch=(data)=>{\r\n    return dispatch =>{\r\n        dispatch({type:GET_VIDEOS_BY_ARTIST,data});\r\n    }\r\n}\r\n\r\nexport const getVideosByArtist = (artist)=>{\r\n\r\n    return async dispatch=>{\r\n        const response=await fetch(`${baseUrl}?term=${artist}&entity=musicVideo`,{\r\n            method: 'GET',\r\n        });\r\n        const data= await response.json();\r\n        if(data){\r\n            dispatch(getVideosByArtistDispatch(data));\r\n        }\r\n        else{\r\n            let message= 'Something is wrong with the data . '\r\n            throw new Error(message);\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}