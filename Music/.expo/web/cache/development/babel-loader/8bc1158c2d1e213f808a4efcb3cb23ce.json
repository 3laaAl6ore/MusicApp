{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var GET_TRACK_BY_ARTIST = 'GET_TRACK_BY_ARTIST';\nexport var GET_VIDEOS_BY_ARTIST = 'GET_TRACK_BY_ARTIST';\nvar baseUrl = 'https://itunes.apple.com/search';\nexport var getTracksByArtistDispatch = function getTracksByArtistDispatch(data) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_TRACK_BY_ARTIST,\n      data: data\n    });\n  };\n};\nexport var getTracksByArtist = function getTracksByArtist(artist) {\n  return function _callee(dispatch) {\n    var response, data, message, _message;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + \"?term=\" + artist + \"&limit=200&entity=musicVideo\", {\n              method: 'GET'\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context.sent;\n\n            if (!data) {\n              _context.next = 12;\n              break;\n            }\n\n            console.log(JSON.stringify(data));\n            dispatch(getTracksByArtistDispatch(data));\n            _context.next = 15;\n            break;\n\n          case 12:\n            message = 'Something is wrong with the data . ';\n            console.log(message);\n            throw new Error(message);\n\n          case 15:\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            _message = 'Something is wrong with the data . ';\n            console.log(_message);\n            throw new Error(_message);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n};\nexport var getVideosByArtistDispatch = function getVideosByArtistDispatch(data) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_VIDEOS_BY_ARTIST,\n      data: data\n    });\n  };\n};\nexport var getVideosByArtist = function getVideosByArtist(artist) {\n  return function _callee2(dispatch) {\n    var response, data, message;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(baseUrl + \"?term=\" + artist + \"&entity=musicVideo\", {\n              method: 'get'\n            }));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context2.sent;\n\n            if (!data) {\n              _context2.next = 11;\n              break;\n            }\n\n            console.log(data);\n            dispatch(getVideosByArtistDispatch(data));\n            _context2.next = 13;\n            break;\n\n          case 11:\n            message = 'Something is wrong with the data . ';\n            throw new Error(message);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/a/Desktop/MyApps/redux/redux/store/actions.js"],"names":["GET_TRACK_BY_ARTIST","GET_VIDEOS_BY_ARTIST","baseUrl","getTracksByArtistDispatch","data","dispatch","type","getTracksByArtist","artist","fetch","method","response","json","console","log","JSON","stringify","message","Error","getVideosByArtistDispatch","getVideosByArtist"],"mappings":";AAAA,OAAO,IAAMA,mBAAmB,GAAE,qBAA3B;AACP,OAAO,IAAMC,oBAAoB,GAAE,qBAA5B;AAEP,IAAMC,OAAO,GAAG,iCAAhB;AAEA,OAAO,IAAMC,yBAAyB,GAAC,SAA1BA,yBAA0B,CAACC,IAAD,EAAQ;AAC3C,SAAO,UAAAC,QAAQ,EAAG;AACdA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,mBAAN;AAA0BI,MAAAA,IAAI,EAAJA;AAA1B,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAU;AAEvC,SAAO,iBAAMH,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEsBI,KAAK,CAAIP,OAAJ,cAAoBM,MAApB,mCAAyD;AAC/EE,cAAAA,MAAM,EAAE;AADuE,aAAzD,CAF3B;;AAAA;AAEOC,YAAAA,QAFP;AAAA;AAAA,6CAKmBA,QAAQ,CAACC,IAAT,EALnB;;AAAA;AAKOR,YAAAA,IALP;;AAAA,iBAMIA,IANJ;AAAA;AAAA;AAAA;;AAOKS,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAZ;AACAC,YAAAA,QAAQ,CAACF,yBAAyB,CAACC,IAAD,CAA1B,CAAR;AARL;AAAA;;AAAA;AAWSa,YAAAA,OAXT,GAWkB,qCAXlB;AAYKJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AAZL,kBAaW,IAAIC,KAAJ,CAAUD,OAAV,CAbX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBKA,YAAAA,QAhBL,GAgBc,qCAhBd;AAiBCJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAjBD,kBAkBO,IAAIC,KAAJ,CAAUD,QAAV,CAlBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAsBH,CAxBM;AA2BP,OAAO,IAAME,yBAAyB,GAAC,SAA1BA,yBAA0B,CAACf,IAAD,EAAQ;AAC3C,SAAO,UAAAC,QAAQ,EAAG;AACdA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,oBAAN;AAA2BG,MAAAA,IAAI,EAAJA;AAA3B,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,IAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACZ,MAAD,EAAU;AAEvC,SAAO,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACkBI,KAAK,CAAIP,OAAJ,cAAoBM,MAApB,yBAA+C;AACrEE,cAAAA,MAAM,EAAE;AAD6D,aAA/C,CADvB;;AAAA;AACGC,YAAAA,QADH;AAAA;AAAA,6CAIeA,QAAQ,CAACC,IAAT,EAJf;;AAAA;AAIGR,YAAAA,IAJH;;AAAA,iBAKAA,IALA;AAAA;AAAA;AAAA;;AAMCS,YAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAC,YAAAA,QAAQ,CAACc,yBAAyB,CAACf,IAAD,CAA1B,CAAR;AAPD;AAAA;;AAAA;AAUKa,YAAAA,OAVL,GAUc,qCAVd;AAAA,kBAWO,IAAIC,KAAJ,CAAUD,OAAV,CAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAeH,CAjBM","sourcesContent":["export const GET_TRACK_BY_ARTIST= 'GET_TRACK_BY_ARTIST';\r\nexport const GET_VIDEOS_BY_ARTIST= 'GET_TRACK_BY_ARTIST';\r\n\r\nconst baseUrl = 'https://itunes.apple.com/search';\r\n\r\nexport const getTracksByArtistDispatch=(data)=>{\r\n    return dispatch =>{\r\n        dispatch({type:GET_TRACK_BY_ARTIST,data});\r\n    }\r\n}\r\n\r\nexport const getTracksByArtist = (artist)=>{\r\n    \r\n    return async dispatch=>{\r\n        try {\r\n            const response=await fetch(`${baseUrl}?term=${artist}&limit=200&entity=musicVideo`,{\r\n                method: 'GET',\r\n            });\r\n            const data= await response.json();\r\n            if(data){\r\n                console.log(JSON.stringify(data))\r\n                dispatch(getTracksByArtistDispatch(data));\r\n            }\r\n            else{\r\n                let message= 'Something is wrong with the data . '\r\n                console.log(message)\r\n                throw new Error(message);\r\n            }\r\n        } catch (error) {\r\n            let message= 'Something is wrong with the data . '\r\n            console.log(message)\r\n            throw new Error(message);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getVideosByArtistDispatch=(data)=>{\r\n    return dispatch =>{\r\n        dispatch({type:GET_VIDEOS_BY_ARTIST,data});\r\n    }\r\n}\r\n\r\nexport const getVideosByArtist = (artist)=>{\r\n\r\n    return async dispatch=>{\r\n        const response=await fetch(`${baseUrl}?term=${artist}&entity=musicVideo`,{\r\n            method: 'get',\r\n        });\r\n        const data= await response.json();\r\n        if(data){\r\n            console.log(data);\r\n            dispatch(getVideosByArtistDispatch(data));\r\n        }\r\n        else{\r\n            let message= 'Something is wrong with the data . '\r\n            throw new Error(message);\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}