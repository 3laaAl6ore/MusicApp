{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nvar loadFontsFromAssets = function loadFontsFromAssets() {\n  return Font.loadAsync({\n    'Poppins-Bold': require(\"./assets/fonts/Poppins-Bold.ttf\"),\n    'Poppins-Italic': require(\"./assets/fonts/Poppins-Italic.ttf\"),\n    'Poppins-Light': require(\"./assets/fonts/Poppins-Light.ttf\"),\n    'Poppins-Medium': require(\"./assets/fonts/Poppins-Medium.ttf\"),\n    'Poppins-Regular': require(\"./assets/fonts/Poppins-Regular.ttf\"),\n    'Poppins-SemiBold': require(\"./assets/fonts/Poppins-SemiBold.ttf\")\n  });\n};\n\nimport reducers from \"./store/reducers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar rootReducers = combineReducers({\n  allTracks: reducers\n});\nvar store = createStore(rootReducers, applyMiddleware(ReduxThunk));\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFontsLoading = _useState2[0],\n      setIsFontsLoading = _useState2[1];\n\n  if (!isFontsLoading) {\n    return _jsx(AppLoading, {\n      startAsync: loadFontsFromAssets,\n      onFinish: function onFinish() {\n        return setIsFontsLoading(true);\n      },\n      onError: console.log('Something is bad')\n    });\n  }\n\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Dashboard, {})\n  });\n}","map":{"version":3,"sources":["C:/Users/eliyhuc/Desktop/redux/App.js"],"names":["React","useState","StatusBar","Dashboard","Provider","ReduxThunk","createStore","combineReducers","applyMiddleware","AppLoading","Font","loadFontsFromAssets","loadAsync","require","reducers","rootReducers","allTracks","store","App","isFontsLoading","setIsFontsLoading","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,SAAOD,IAAI,CAACE,SAAL,CAAe;AACpB,oBAAiBC,OAAO,mCADJ;AAEpB,sBAAmBA,OAAO,qCAFN;AAGpB,qBAAkBA,OAAO,oCAHL;AAIpB,sBAAmBA,OAAO,qCAJN;AAKpB,uBAAoBA,OAAO,sCALP;AAMpB,wBAAqBA,OAAO;AANR,GAAf,CAAP;AAQD,CATD;;AAWA,OAAOC,QAAP;;AACA,IAAMC,YAAY,GAAGR,eAAe,CAAC;AACnCS,EAAAA,SAAS,EAAEF;AADwB,CAAD,CAApC;AAGA,IAAMG,KAAK,GAAGX,WAAW,CAACS,YAAD,EAAcP,eAAe,CAACH,UAAD,CAA7B,CAAzB;AAEA,eAAe,SAASa,GAAT,GAAe;AAE5B,kBAA4CjB,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAOkB,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAG,CAACD,cAAJ,EAAmB;AACjB,WACE,KAAC,UAAD;AACE,MAAA,UAAU,EAAER,mBADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMS,iBAAiB,CAAC,IAAD,CAAvB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAHX,MADF;AAMD;;AAED,SACE,KAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA,cACE,KAAC,SAAD;AADF,IADF;AAKD","sourcesContent":["import React, {useState} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Text, View } from 'react-native';\nimport Dashboard from './Components/Dashboard'\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createStore,combineReducers,applyMiddleware } from 'redux';\n\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nconst loadFontsFromAssets = () => {\n  return Font.loadAsync({\n    'Poppins-Bold' : require('./assets/fonts/Poppins-Bold.ttf'),\n    'Poppins-Italic' : require('./assets/fonts/Poppins-Italic.ttf'),\n    'Poppins-Light' : require('./assets/fonts/Poppins-Light.ttf'),\n    'Poppins-Medium' : require('./assets/fonts/Poppins-Medium.ttf'),\n    'Poppins-Regular' : require('./assets/fonts/Poppins-Regular.ttf'),\n    'Poppins-SemiBold' : require('./assets/fonts/Poppins-SemiBold.ttf'),\n  });\n}\n\nimport reducers from './store/reducers';\nconst rootReducers = combineReducers({\n  allTracks: reducers,\n});\nconst store = createStore(rootReducers,applyMiddleware(ReduxThunk));//applyMiddleware : לעביר את המידע בין הדפים\n\nexport default function App() {\n\n  const [isFontsLoading, setIsFontsLoading] = useState(false);\n\n  if(!isFontsLoading){\n    return(\n      <AppLoading \n        startAsync={loadFontsFromAssets}\n        onFinish={() => setIsFontsLoading(true)}\n        onError={console.log('Something is bad')} />\n    )\n  }\n\n  return (\n    <Provider store={store}>\n      <Dashboard/>\n    </Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}